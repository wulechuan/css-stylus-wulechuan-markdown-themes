@import '../utils/apply-default-value-to-variable-if-needed'
    
applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_fontFamily_baseFontFamilyCarrierSelectors',
    defaultValue: 'html'
)

applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_fontFamily_monospaceFontFamilyCarrierSelectors',
    defaultValue: 'kbd, pre, code'
)

if !lookup('_markdownArticleRootSelector') {
    // _markdownArticleRootSelector = ''
    warn('Variable "_markdownArticleRootSelector" is set to empty.')
    _shouldWrapCodeBlockThemingRulesWith_markdownArticleRootSelector = false
}

applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_markdownArticleParentSelector',
    defaultValue: 'body'
)

applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_markdownArticleBackplateBackgroundColorCarrierSelector',
    defaultValue: 'html'
)

applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_baseThemeName',
    defaultValue: 'theme-0'
)

applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_codeBlocksTypeName',
    defaultValue: 'highlightjs'
)

applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_fontFamily_shouldMarkAsImportantRule',
    defaultValue: false
)

applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_shouldNotOutputTitleBlock',
    defaultValue: false
)

applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_markdownArticleShouldNotScrollSmoothly',
    defaultValue: false
)

applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_shouldWrapLayoutRulesWith_markdownArticleRootSelector',
    defaultValue: false
)

applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_shouldWrapBaseThemingRulesWith_markdownArticleRootSelector',
    defaultValue: false
)

applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_shouldWrapCodeBlockThemingRulesWith_markdownArticleRootSelector',
    defaultValue: false
)

