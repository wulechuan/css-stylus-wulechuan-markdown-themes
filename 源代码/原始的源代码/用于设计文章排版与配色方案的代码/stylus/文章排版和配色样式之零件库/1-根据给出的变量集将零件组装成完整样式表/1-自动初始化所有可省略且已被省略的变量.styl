@import '../../utils/apply-default-value-to-variable-if-needed'

applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_selectorsOf_fontFamily_monospaceFontFamilyCarriers',
    defaultValue: 'kbd, pre, code'
)

applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_selectorOf_markdownArticleParent',
    defaultValue: 'body'
)

if lookup('_selectorOf_markdownArticleRoot') {
    applyDefaultValueToAGlobalVariableIfNeeded(
        variableName: '_selectorsOf_fontFamily_baseFontFamilyCarriers',
        defaultValue: _selectorOf_markdownArticleRoot
    )

    applyDefaultValueToAGlobalVariableIfNeeded(
        variableName: '_selectorsOf_fontSize_baseFontSizeCarriers',
        defaultValue: _selectorOf_markdownArticleRoot
    )
} else {
    // _selectorOf_markdownArticleRoot = ''

    warn('@wulechuan: Variable "_selectorOf_markdownArticleRoot" is set to empty.')
    _shouldWrapCodeBlockThemingRulesWith_selectorOf_markdownArticleRoot = false

    if (_selectorOf_markdownArticleParent == 'body' || _selectorOf_markdownArticleParent == 'html') {
        applyDefaultValueToAGlobalVariableIfNeeded(
            variableName: '_selectorsOf_fontFamily_baseFontFamilyCarriers',
            defaultValue: 'html'
        )

        applyDefaultValueToAGlobalVariableIfNeeded(
            variableName: '_selectorsOf_fontSize_baseFontSizeCarriers',
            defaultValue: 'html'
        )
    } else {
        applyDefaultValueToAGlobalVariableIfNeeded(
            variableName: '_selectorsOf_fontFamily_baseFontFamilyCarriers',
            defaultValue: _selectorOf_markdownArticleParent
        )

        applyDefaultValueToAGlobalVariableIfNeeded(
            variableName: '_selectorsOf_fontSize_baseFontSizeCarriers',
            defaultValue: _selectorOf_markdownArticleParent
        )
    }
}


applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_selectorOf_markdownArticleBackplateBackgroundColorCarrier',
    defaultValue: 'html'
)

applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_selectorOf_markdownArticleHeadingsPermantLinkAnchors',
    defaultValue: '.header-anchor'
)

applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_selectorOf_tocByMarkdownItTOCDoneRight',
    defaultValue: 'nav.markdown-aritcle-toc'
)

applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_selectorOf_backToTopLink',
    defaultValue: '.markdown-article-back-to-top'
)

applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_folderNameOf_baseTheme',
    defaultValue: 'theme-0'
)

applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_folderNameOf_codeBlocksType',
    defaultValue: 'highlightjs'
)

applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_fontFamily_shouldMarkAsImportantRule',
    defaultValue: false
)

applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_shouldNotOutputTitleBlock',
    defaultValue: false
)

applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_shouldIncludeBackToTopLink',
    defaultValue: false
)

applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_markdownArticleShouldNotScrollSmoothly',
    defaultValue: false
)

applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_shouldWrapLayoutRulesWith_selectorOf_markdownArticleRoot',
    defaultValue: false
)

applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_shouldWrapBaseThemingRulesWith_selectorOf_markdownArticleRoot',
    defaultValue: false
)

applyDefaultValueToAGlobalVariableIfNeeded(
    variableName: '_shouldWrapCodeBlockThemingRulesWith_selectorOf_markdownArticleRoot',
    defaultValue: false
)

